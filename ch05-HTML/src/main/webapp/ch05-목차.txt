ch05-HTML 목차

Dynamic Web Project로 생성,
톰캣 버전 = 9
jdk 버전 = 11

다이나믹 웹 프로젝트는 html파일 생성시, main밑에 webapp안에서 파일들을 만들어야
구동 및 실행이 가능하다.

ch01-basic : 기본 태그들의 연습
	- s01 : 기본 페이지
	- s02 : 글자 태그들
	- s03 : 문장 태그들
	- s04 : 문자 엔티티
	- s05 : 외부 페이지 링크
	- s06 : 이미지 태그
	- s07 : 배경색 지정
	- s08 : 링크의 다양한 글자색 지정
	- s09 : 목록 태그 정리
	- s10 : 테이블 태그 사용 방법 
	- s11 : 테이블 태그 사용 방법 (th, td 태그 속성지정)
	- s12 : 이력서 자작
	- s13 : iframe으로 하나의 페이지 내부에서 또 다른 페이지 호출

ch02-form : 폼을 이용하여 서버에 데이터 전송
	- s01 : 여러 종류의 input 타입, radio, select 태그 등
	- s02 : 데이터를 입력하는 태그에 label을 붙여 명시함, fieldset태그와 legend 태그를 사용함
	- s03 : input태그의 여러 속성들, datalist 사용법


ch03-videoAudio
	- s01 : 비디오 박스 태그, 옵션, 속성들
	- s02 : 다양한 포맷의 비디오 지원, 브라우저별 비디오 제공방법
	- s03 : 다양한 포맷의 오디오 지원, 브라우저별 오디오 제공방법

ch04-cssBasic : CSS 스타일 
	- s01 : 인-라인 방식의 스타일 방법
	- s02 : 임베디드(문서의 head에 style태그 명시 방법) 방식의 스타일 방법
	- s03 : 별도의 style.css 파일을 만들고 link로 파일을 불러와서 사용하는 방법
	- s04 : 문서의 style 태그 내부에서 style.css 파일을 @import로 선언하는 방법
	- s05 : 스타일을 !important를 명시함으로써 우선순위를 바꾸는 방법
	- s06 : 태그 선택자
	- s07 : 클래스 선택자
	- s08 : 아이디 선택자
	- s09 : 태그 선택자와 클래스 선택자 연계
	- s10 : 태그 선택자와 아이디 선택자를 연계
	- s11 : 그룹 선택자 						ex) h1,p{}
	- s12 : 후손 선택자 						ex) body div{}
	- s13 : 자식 선택자 						ex) body > div{}
	- s14 : 동위 선택자 						ex) h1 + h2 {} 또는 div ~ p {}
	- s15 : 속성 선택자 						ex) a[title] {}						- 대략 패턴 검색 선택자임
	- s16 : 가상클래스 선택자 					ex) a:hover							- 반응형 클래스

ch05-cssText : Text의 css스타일
	- s01 : 밑줄, 중간줄, 윗줄
	- s02 : 글의 정렬 관련 옵션
	- s03 : 들여쓰기, 내어쓰기 옵션
	- s04 : 글자간격, 단어간격 옵션
	- s05 : 영문자의 대, 소문자 가공 옵션
	- s06 : 문서의 태그내에 생기는 공백의 처리 여부 결정 옵션
	- s07 : 포토샵의 WordArt처럼 처리가 가능
	- s08 : 텍스트가 잘리면 벗어난 데이터를 말줄임(...) 처리하는 옵션
	- s09 : 텍스트들의 font 옵션들
	- s10 : 서버에 font를 저장해두고 불러와서 사용하는 방법
	- s11 : 웹에서 font를 불러와서 사용하는 방법

ch06-cssList
	- s01 : ul, li 리스트의 기호, 위치, 이미지 속성
	- s02 : list 목록의 가로, 세로 배치 방법
	- s03 : list 목록으로 링크가 있는 가로메뉴 만들기(컬러포함)

ch07-cssColor
	- s01 : 색깔 표현 방법 (RGB)
	- s02 : 색깔 표현 방법 투명포함(RGBA)
	- s03 : 색깔 표현 방법 (HSL, HSLA)
	- s04 : 배경이미지(background)의 옵션들
	- s05 : 배경이미지(background)의 옵션중 반복(repeat), 위치(position)

ch08-cssBox
	- s01 : margin, padding(여백) 옵션 및 border의 여러가지 옵션들
	- s02 : border의 둥글게 하는 옵션(css3)
	- s03 : border의 둥글게 하는 옵션(css3)
	- s04 : border의 그림자를 생성하는 옵션

ch09-cssPosition
	- s01 : css로 태그들의 위치를 이동하는 방법(absolute)
	- s02 : css로 태그들의 위치를 이동하는 방법(relative)
	- s03 : css로 태그들의 위치를 이동하는 방법(fixed)
	- s04 : poster 과제물
	- s05 : 겹쳐져 있는 태그요소들의 쌓는 순서 정하는 방법 (z-index)
	- s06 : div 안에 있는 text 컨텐츠의 흘러넘치는 부분을 조정하는 방법 (overflow)
	- s07 : overflow 와 동시에 활용하면 좋은 css옵션 (resize)

ch10-cssFloat	!!!!!!!!!!!!! 중요 !!!!!!!!!!!!!!!!!!!!!!!!!! 중요 !!!!!!!!!!!!!!!!!!!!!!!!!! 중요 !!!!!!!!!!!!!!!!!!!!!!!!!! 중요 !!!!!!!!!!!!!
	- s01 : div 태그 박스들의 가로, 세로 배치 배열방식 설정방법 (Float) 
	- s02 : 3개의 div 태그들로 배치 하는 방법

ch11-cssTable
	- s01 : table의 css 스타일 적용 방법
	- s02 : div의 css 스타일 적용 방법

ch12-cssTransform
	- s01 : Transform CSS의 rotate(회전) 옵션
	- s02 : Transform CSS의 scale(크기/확대/축소) 옵션
	- s03 : Transform CSS의 skew(비틀림) 옵션
	- s04 : Transform CSS의 translate(위치이동) 옵션

ch13-cssMedia
	- s01 : 뷰포트(media query) 디바이스별, 반응형 웹 디자인 만들기

ch14-semantic
	- s01 : semantic(시맨틱) 태그들을 사용하여 div 보다 편리하게 코드 관리하기
	- s02 : semantic(시맨틱) 태그들을 사용하여 div 보다 편리하게 코드 관리하기 2
	- s03 : semantic(시맨틱) 태그들을 사용하여 페이지 만들기
	- s04 : semantic(시맨틱) 태그들을 사용하여 페이지 만들기 (CSS 활용)





ch15-jsBasic
	- s01 : 자바스크립트 기초
	- s02 : 자바스크립트를 외부파일로 만들어서 불러와서 사용하는 방법	//script src="script.js"
	- s03 : 태그 내장 - inline 형태
	- s04 : 자바스크립트의 주석 및 출력
	- s05 : 자바스크립트의 출력 및 콘솔 사용법 //document.write(), console.log()
	- s06 : 자바스크립트의 변수 선언 및 초기화
	- s07 : 변수 사용시 주의사항
	- s08 : 자바스크립트의 변수 호이스팅 (스크립트 엔진의 소스코드 해석방법)
	- s09 : 자바스크립트의 자료형
	- s10 : 형변환
	- s11 : 비교연산자
	- s12 : 연산자
	- s13 : 조건연산자(삼항연산자)
	- s14 : 자바스크립트식 조건연산자(삼항연산자)

ch16-jsFunction
	- s01 : 자바스크립트의 함수
	- s02 : 함수 사용시 주의사항
	- s03 : 함수 호이스팅 및 주의사항
	- s04 :	지역변수와 전역변수
	- s05 : 블록범위 let 변수 (var의 취약점을 해소하기 위한 변수)
	- s06 : 블록범위 const 상수
	- s07 : 함수의 파라미터 사용법 (인자가 여러개 필요해도 굳이 값을 넣을 필요가 없음)
	- s08 : 함수의 가변인자 (arguments)
	- s09 : 
	- s10 : return = 함수를 빠져나가는 명령어
	- s11 : arrow = 함수를 간략하게 정의하는 방법 : 익명함수만 가능함

	- s14 : 함수안에 함수를 만들수 있는 기법	내부 함수는 함수안에서 정의하고 호출해야 사용가능하다 (외부에서 호출 불가능)
	- s15 : 내부함수 지역변수 편
	- s16 : 내부함수를 return 으로 반환해서 호출하는 방법	클로저(closure)
	- s17 : 내부함수의 다양한 호출 방법 					클로저(closure)
	- s18 : isFinite함수
	- s19 : isNaN함수
	- s20 : parseInt, Float | String의 숫자 형변환 방법

ch17-jsArray
	- s01 : 

ch18-jsObject
	- s01 : JS 에서 객체를 생성하고, 객체의 속성을 호출하는 방법
	- s02 : 반복문을 활용한 객체의 속성 호출
